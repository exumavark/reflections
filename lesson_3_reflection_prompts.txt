When would you want to use a remote repository rather than keeping all your work
local?

    When you want to share it with other users or other computers and also if you want an offsite backup of your repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You would want to manully do it so that you know when your local repository is updated to prevent unexpected changes in your local copy.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are exact copies of git and GitHub repositories.
    Forks are clones of GitHub repositories, made from GitHub to GitHub.
    Branches exist inside repositories and can initially be seen as a clones inside the repository.  These clones then take seperate paths, just like a tree's branches.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It can be handy if you are going to work offline for a while.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would use TFS.  It would be easier because it is so neatly integrated into Visual Studio.  It would be a bit harder to work offline and be able to revert and compare changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
