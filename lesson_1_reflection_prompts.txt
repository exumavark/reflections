How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It sped up the process by only highlighting the changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can allow you to quickly revert back to a previous version if needed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pro is that you have control over when a commit is created so you can exact restore points for logical changes.
	There are no cons.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is a more specialised version control system that typically controls versions of files that are related to each other and for which it would make sense to have one commit for them all.

How can you use the commands git log and git diff to view the history of files?

    You can use git log to view the commit history.
	After that you can use git diff to compare two commits against each other.

How might using version control make you more confident to make changes that
could break something?

    It would give you the peace of mind that you can always revert back to a working version, and therefore you don't need to be afraid of 'breaking' anything.

Now that you have your workspace set up, what do you want to try using Git for?

    For my next course, Developing Android Apps.
